name: Release build

env:
  OUTPUT_PATH: ${{ github.workspace }}/.nupkg
  DOTNET_VERSION: |
    8.0.x
    6.0.x
    9.0.x
  GITHUB_SOURCE: "https://nuget.pkg.github.com/aaronpowell/index.json"
  NUGET_SOURCE: "https://api.nuget.org/v3/index.json"

on:
  push:
    tags:
      - v* #version is cut
jobs:
  build:
    runs-on: ubuntu-latest
    environment:
      name: CI
    env:
      DOTNET_CONFIGURATION: Release
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore --configuration ${{ env.DOTNET_CONFIGURATION }}
      - name: Publish NuGet package
        run: dotnet pack --no-build -c ${{ env.DOTNET_CONFIGURATION }} -o ${{ env.OUTPUT_PATH }} -p:VersionSuffix='alpha.${{ github.run_number }}'

      - name: Publish release packages
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: ${{ env.OUTPUT_PATH }}

      - run: echo "tag=${GITHUB_REF##*/v}" >> $GITHUB_ENV

            - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ env.OUTPUT_PATH }}

  publish-github:
    needs: publish-release
    runs-on: ubuntu-latest
    environment:
      name: GitHub Packages

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: packages
          path: ${{ env.OUTPUT_PATH }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Publish
        run: dotnet nuget push --api-key ${{ secrets.GITHUB_TOKEN }} --source ${{ env.GITHUB_SOURCE }} "*.nupkg"
        working-directory: ${{ env.OUTPUT_PATH }}

  publish-nuget:
    needs: publish-release
    runs-on: ubuntu-latest
    environment:
      name: NuGet

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: packages
          path: ${{ env.OUTPUT_PATH }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Publish
        run: dotnet nuget push --api-key ${{ secrets.NUGET_KEY }} --source ${{ env.NUGET_SOURCE }} "*.nupkg"
        working-directory: ${{ env.OUTPUT_PATH }}